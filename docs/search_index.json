[["index.html", "tigeR: Tumor Immunotherapy Gene Expression Data Analysis R package Getting start with tigeR 0.1 Introduction 0.2 The workflow of tigeR 0.3 Installation 0.4 Function Overview 0.5 Troubleshooting", " tigeR: Tumor Immunotherapy Gene Expression Data Analysis R package Yihao Chen, Li-Na He, Yuanzhe Zhang, Yuelong Shu, Di Zhang, Guangchuang Yu, Zhixiang Zuo 2024-05-12 Getting start with tigeR 0.1 Introduction  tigeR encompasses four distinct yet closely interconnected modules. The Biomarker Evaluation module enables researchers to evaluate whether the biomarkers of interest are associated with immunotherapy response via built-in or custom immunotherapy gene expression data. The Tumor Microenvironment Deconvolution module integrates 10 open-source algorithms to obtain the proportions of different cell types within the tumor microenvironment, facilitating the investigation of the association between immune cell populations and immunotherapy response. The Prediction Model Construction module equips users with the ability to construct sophisticated prediction models using a range of built-in machine learning algorithms. The Response Prediction module predict the immunotherapy response for the patients from gene expression data using our pre-trained machine learning models or public gene expression signatures. 0.2 The workflow of tigeR  tigeR comprises four distinct yet interconnected functional modules, as depicted in Figure 2. Users have the flexibility to load built-in gene expression data with immunotherapy outcome information or to utilize their own data for subsequent analysis. The Biomarker Evaluation module serves to assess the correlation between biomarkers and immunotherapy outcomes. Furthermore, the Tumor Microenvironment Deconvolution module enables the derivation of cell type proportions within the tumor microenvironment using 10 open-source algorithms[22-31]. This module also provides functionality for evaluating the interplay between fractions of tumor microenvironment cells and immunotherapy outcomes. Subsequently, based on the features selected from these two modules, users can leverage the Prediction Model Construction module, which incorporates a range of machine learning models, to train a model for predicting immunotherapy response using transcriptome gene expression data. Users can use the Response Prediction module to predict the immunotherapy response for the patients from gene expression data using our pre-trained machine learning models or public gene expression signatures. 0.3 Installation packages &lt;- c(&quot;BiocManager&quot;, &quot;devtools&quot;, &quot;RobustRankAggreg&quot;) for (package in packages) { if (!require(package, character.only = TRUE)) { install.packages(package) } } devtools::install_github(&quot;YuLab-SMU/tigeR&quot;) 0.4 Function Overview Data Loading Dataloader(): load data online (ExperimentHub or TIGER Web Server). Biomarkder Evaluation score_biomk(): generate a comprehensive signature score matrix for the 23 signatures in tigeR. Columns represent the signature scores, while rows denote the sample names. score_biomk_SE(): generate a comprehensive signature score matrix for the 23 signatures in tigeR. Columns represent the signature scores, while rows denote the sample names. (return a SummarizedExperiment object) roc_biomk(): generate a Receiver Operating Characteristic (ROC) object and a curve to assess the predictive performance. diff_biomk(): plot differential result (Responder vs Non-Responder or Pre-Treatment vs Post-Treatment). surv_biomk(): calculates hazard ratios, confidence intervals and P value of cox-ph analysis as well as draw KM curve. compare_biomk(): generate a heatmap of signature auc of datasets. browser_biomk(): generate an integration diagram comprising a bar plot representing AUC and a dot plot denoting Hazard Ratio and P-value. integrate_analysis(): perform differential expression analysis and survival analysis. TME Deconvolution TME_deconvolution(): perform Tumor Microenvironment deconvolution through 10 open-source algorithms. fraction_pie(): generate a pie plot illustrating the cell fraction or relative cell abundance for each sample. Prediction Model Construction data_standardization(): perform data standardization, including converting FPKM to TPM, removing NA values, applying log transformation, and scaling the data. compare_roc(): plot all the roc curves on a single plot. gini_gene(): calculating the Gini index and get an overview of the classification efficiency of genes. diff_gene(): return differential expression gene between Responder and Non-Responder. build_Model(): generate immunotherapy response prediction machine-learning model. test_Model(): test model generated by build_Model function. Response Prediction pred_response(): predict immunotherapy response and generate heatmap of signatures. 0.5 Troubleshooting Please report bugs in Github issue. "],["load-data-into-r-environment.html", "Chapter 1 Load data into R environment 1.1 Organization of built-in data 1.2 Obtain data from tigeR web server 1.3 Obtain data from ExperimentHub", " Chapter 1 Load data into R environment 1.1 Organization of built-in data The built-in data follows several specifications for constructing: ① They are constructed into a SummarizedExperiment object using the SummarizedExperiment() function in SummarizedExperiment package. ② The assays of the SummarizedExperiment object are stored as a SimpleList containing an expression matrix, where rows represent genes and columns represent patients. ③ The colData of the SummarizedExperiment object is a table(DFrame object of S4), where the row names must be the same as the column names of the expression matrix. The column names of the table represent the clinical information of patients. The detailed information about the column names is presented below. column name Recommend value Description Necessity in tigeR analysis sample id character The sample identification. ✕ patient_name character The patient identification. ✕ dataset_id character The dataset identification. ✕ dataset_group character ✕ Treatment PRE/POST The patient sample is collected after Treatment or before Treatment ✓ response CR/MR/PR/PD/SD/NR/R/N The Immunotherapy response. ✕ response_NR R/N The Immunotherapy response which only contains R or N. ✓ M.stage character The M stage of patients. ✕ overall.survival..days. value The number of days, months or years of survival time of patients.(all samples must be the same unit) ✓ vital.status Alive/Dead The survival status of patient. ✓ Total.Mutation numeric The total mutation gene numbers. ✕ Gender M/F The gender of patient. ✕ Therapy character The anti-tumor therapy on patients. ✕ age_start numeric When the tumor is diagnosed. ✕ tumor_type character The type of tumor. ✕ seq_type character The sequencing type. ✕ id character The identification of dataset. ✕ 1.2 Obtain data from tigeR web server Dataloader(c(1,2,3), use_source=&quot;Web Server&quot;) 1.3 Obtain data from ExperimentHub Dataloader(c(1,2,3), use_source=&quot;ExperimentHub) "],["biomarker-evaluation.html", "Chapter 2 Biomarker Evaluation 2.1 Integrate analysis 2.2 Differential analysis 2.3 Suvival analysis 2.4 Calculate comprehensive signature score 2.5 Assess the Performance of Signature", " Chapter 2 Biomarker Evaluation 2.1 Integrate analysis  The integrate_analysis() function returns the results of both the differential analysis and survival analysis for a gene or gene set within a dataset (or datasets). integrate_analysis(SE=MEL_GSE91061, geneSet=&quot;CD274&quot;) 2.2 Differential analysis  You can use diff_biomk() to visualize differential analysis result between Pre-Treatment and Post-Treatment patients or Responders and Non-Responders in specified gene. Pre-Treament vs Post-Treatment diff_biomk(SE=MEL_GSE91061,gene=&#39;CD274&#39;,type=&#39;Treatment&#39;) + ggtitle(&quot;Pre-Treament vs Post-Treatment) + theme(plot.title = element_text(hjust = 0.5)) Responder vs Non-Responder diff_biomk(SE=MEL_GSE91061,gene=&#39;CD274&#39;,type=&#39;Response&#39;) + ggtitle(&quot;Responder vs Non-Responder&quot;) + theme(plot.title = element_text(hjust = 0.5)) 2.3 Suvival analysis  You can use diff_biomk() to visualize survival analysis result in specified gene. P &lt;- surv_biomk(SE=MEL_GSE91061,gene=&#39;CD274&#39;) P$plot &lt;- P$plot + ggtitle(&quot;Survival analysis&quot;) + theme(plot.title = element_text(hjust = 0.5)) P 2.4 Calculate comprehensive signature score  By employing the score_biomk() function, you can obtain a comprehensive signature score matrix for the 23 signatures in TigeR. In this matrix, the columns represent the signature scores, and the rows denote the sample names. Signature Method PMID IRS multivariate Cox analysis 35280438 tGE8 median of Z-score 31686036 MEMTS Average mean 35769483 PRGScore Average mean 35479097 Angiogenesis Average mean 29867230 Teffector Average mean 29867230 Myeloid_inflammatory Average mean 29867230 IFNG_Sig Average mean 29150430 TLS Weighted mean 31942071 MSKCC Weighted mean 34421886 LMRGPI Weighted mean 35582412 PRS Weighted mean 35085103 Stemnesssignatures Weighted mean 35681225 GRIP Weighted mean 35492358 IPS Weighted mean 32572951 Tcell_inflamed_GEP Weighted mean 30309915 DDR Z-score;PCA 29443960 CD8Teffector Z-score;PCA 29443960 CellCycleReg Z-score;PCA 29443960 PanFTBRs Z-score;PCA 29443960 EMT1 Z-score;PCA 29443960 EMT2 Z-score;PCA 29443960 EMT3 Z-score;PCA 29443960 2.4.1 Algorithm  The signature scores are generated through calculating average mean or weighted mean or Z-score of the expression value of specified genes.  For example, MSKCC Signature are calculated by the following formula:     \\(MSKCC=-0.492\\times exp(TP53)+0.562\\times exp(PIK3CA)+1.454\\times exp(ATM)\\)    where exp() represents the expression value of the gene. score_biomk(MEL_GSE78220)  Columns represent signatures and rows represent sample. 2.5 Assess the Performance of Signature  By employing the roc_biomk() function, you can assess the performance of built-in and custom signatures in different datasets.  The function will generate a roc object and a curve to assess the predictive performance. roc_biomk(MEL_PRJEB23709, Weighted_mean_Sigs$Tcell_inflamed_GEP, method = &quot;Weighted_mean&quot;, rmBE=TRUE, response_NR=TRUE) "],["tumor-microenviroment-analysis.html", "Chapter 3 Tumor Microenviroment Analysis 3.1 TIMER 3.2 CIBERSORT 3.3 xCell 3.4 ConsensusTME", " Chapter 3 Tumor Microenviroment Analysis 3.1 TIMER  TIMER is a comprehensive tool for systematical analysis of immune infiltrates across diverse cancer types.  TIMER() function will return a matrix indicating relative abundance of diferrent cell types . TIMER(MEL_GSE91061,type = &quot;SKCM&quot;) 3.2 CIBERSORT  CIBERSORT is an analytical tool from the Alizadeh Lab and Newman Lab to impute gene expression profiles and provide an estimation of the abundances of member cell types in a mixed cell population, using gene expression data.  tigeR offer you an built-in function CIBERSORT() for estimation of the abundances of member cell types. CIBERSORT() function will return a list which first element is the cell type proportion matrix and second element is a boxplot. result &lt;- CIBERSORT(sig_matrix = LM22, SE = MEL_GSE78220, perm = 0, QN = TRUE) 3.3 xCell  xCell is a gene signatures-based method learned from thousands of pure cell types from various sources. xCell applies a novel technique for reducing associations between closely related cell types.  tigeR offer you an built-in function xCell() for estimation of the abundances of member cell types. CIBERSORT() function will return a xCell(MEL_GSE91061) 3.4 ConsensusTME  ConsensusTME a consensus approach to generating cancer specific signatures for multiple cell types found within the tumour microenvironment. ConsensusTME(MEL_GSE91061,cancer = &quot;SKCM&quot;) "],["prediction-model-construction.html", "Chapter 4 Prediction Model Construction 4.1 Build Model 4.2 Test Model", " Chapter 4 Prediction Model Construction 4.1 Build Model  You can use function build_Model to build machine learning predictive model including naive Bayes models, Support vector machine model, random forest model, Cancerclass model, Adaboost model, Logitboost model, Logistics regression model.  The function returns a trained model. train_set &lt;- list(MEL_GSE91061, MEL_phs000452, RCC_Braun_2020) mymodel &lt;- build_Model(Model=&#39;NB&#39;, SE=train_set, feature_genes=Stem.Sig, response_NR = TRUE) 4.2 Test Model  test_Model are designed for testing model built by build_Model function. This function returns a ROC object. test_Model(mymodel,MEL_78220) "],["response-prediction.html", "Chapter 5 Response Prediction", " Chapter 5 Response Prediction pred_response function predict the immunotherapy response for the patients from gene expression data using our pre-trained machine learning models or public gene expression signatures. pred_response(SE=MEL_GSE93157,Signature = ipt, method = &quot;Weighted_mean&quot;,threshold = 0.8, PT_drop = FALSE,sort_by = &quot;Customed.Signature&quot;, group_by = &quot;Customed.Signature&quot;,show.real = TRUE, rankscore = FALSE) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
