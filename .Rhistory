bookdown::serve_book()
install.packages("servr")
install.packages("servr")
library(tigeR)
?Dataloader
bookdown::serve_book()
bookdown::serve_book()
bookdown::serve_book()\
bookdown::serve_book()
bookdown::serve_book()
bookdown::serve_book()
bookdown::serve_book()
bookdown::serve_book()
bookdown::serve_book()
bookdown::serve_book()
library(tigeR)
## Obtain data from data package(recommandate)
```
bookdown::serve_book()
bookdown::serve_book()
bookdown::serve_book()
bookdown::serve_book()
bookdown::serve_book()
bookdown::serve_book()
bookdown::serve_book()
rep("./fig/IOBR-Workflow.png", 1)
bookdown::serve_book()
bookdown::serve_book()
knitr::include_graphics(rep("./figs/logo.png", 1))
### 1.Introduction
+ 1060 samples with immunotherapy clinical information from a total of 11 melanoma datasets, 3 lung cancer datasets, 2 kidney cancer datasets, 1 gastric cancer dataset, 1 low-grade glioma dataset, 1 glioblastoma dataset and 1 Head and Neck Squamous data set (all organized into R language ‘SummarizedExperiment’ objects).
### 1.Introduction
\+ 1060 samples with immunotherapy clinical information from a total of 11 melanoma datasets, 3 lung cancer datasets, 2 kidney cancer datasets, 1 gastric cancer dataset, 1 low-grade glioma dataset, 1 glioblastoma dataset and 1 Head and Neck Squamous data set (all organized into R language ‘SummarizedExperiment’ objects).
library(readxl)
xlsx_file <- "C:/Users/19177/Desktop/H3N2.xlsx"
sheet_names <- excel_sheets(xlsx_file)
# 从xlsx读取所有工作簿
table_list <-
lapply(sheet_names,function(x){
read_excel(xlsx_file, sheet = x)
})
# 排除2,3,4列
Tb_cut <-
lapply(table_list, function(x){
x[,-c(2,3,4)]
})
process_tibble <- function(i){
Tb <- Tb_cut[[i]]
Test_idx <- which(grepl("Test|TEST", Tb$Virus))
if(length(Test_idx)==0)
if(i==150)
return(Tb)
else{stop(i)}
if(Test_idx==ncol(Tb)){
colnames(Tb) <- c("Virus",paste0(Tb$Virus[1:(Test_idx-1)],
" ",sub("\\.\\.\\.\\d+","",colnames(Tb))))
}else if(all(nchar(colnames(Tb)[-1])>10)){
return(Tb)
}else if(length(which(nchar(colnames(Tb))<10))==Test_idx){
colnames(Tb)[which(nchar(colnames(Tb))<10)] <- c("Virus",
paste0(Tb$Virus[1:(Test_idx-1)],
" ",sub("\\.\\.\\.\\d+","",colnames(Tb)[which(nchar(colnames(Tb))<10)][-1])))
}else{
warning(i)
return()
}
return(Tb)
}
library(magrittr)
# 得到名字完整的
Tb_clean <-
lapply(seq_along(Tb_cut), process_tibble)
# 改行名和列名
Tb_clean1 <-
lapply(Tb_clean,function(x){
x$Virus %<>%
sub("Hong Kong","HongKong",.) %>%
sub("New York","NewYork",.)
colnames(x) %<>%
sub("Hong Kong","HongKong",.) %>%
sub("New York","NewYork",.) %>%
sub("New Hampshire","NewHampshire",.) %>%
sub("Rhode Is","RhodeIsland",.) %>%
sub("Nth Carol","NorthCarolina",.) %>%
sub("South Africa","SouthAfrica",.) %>%
sub("HK","HongKong",.)
return(x)
})
#只要病毒信息
Tb_clean2 <-
lapply(Tb_clean,function(x){
cn <- strsplit(colnames(x)," ")
colnames(x) <- unlist(lapply(cn, function(x) x[1]))
vrs <- strsplit(x$Virus," ")
x$Virus <- unlist(lapply(vrs, function(x) x[1]))
return(x)
})
#去除Test
Tb_clean3 <-
lapply(Tb_clean2,function(x){
Test_idx <- which(grepl("Test|TEST", x$Virus))
x[-Test_idx,]
})
library(purrr)
TT <- compact(Tb_clean3)
length(TT)
TT <-
lapply(TT, function(x){
colnames(x) <- sub("\\.\\.\\.\\d+","",colnames(x))
x
})
cnames <-
lapply(TT,function(x){
colnames(x)
})
tett <- unique(unlist(cnames))
length(tett)
vnames <-
lapply(TT,function(x){
x$Virus
})
tett1 <- unique(unlist(vnames))
length(tett1)
tett1[sapply(tett1, function(s) sum(charToRaw(s) == charToRaw("/")) < 3)]
library(plyr)
library(dplyr)
combined_df <- do.call("rbind.fill",TT)
multi_row <- sort(table(combined_df$Virus),decreasing = TRUE)
multi_row <- multi_row[multi_row > 1]
most <- lapply(names(multi_row), function(x){
df <- combined_df[combined_df$Virus==x, ]%>%
select(where(~ !all(is.na(.))))
merge <-
apply(df[,-1],2,function(x){
names(sort(table(x),decreasing = TRUE))[1]
})
names(merge) <- colnames(df)[-1]
fi=data.frame(Virus=x,t(merge))
return(fi)
})
sup_df <- do.call("rbind.fill",most)
rownames(sup_df) <- names(multi_row)
final_df <- rbind.fill(combined_df[!combined_df$Virus %in% names(multi_row),],sup_df)
final_df <- final_df[!is.na(final_df$Virus),]
lapply(seq_along(TT),function(i){
if(length(colnames(TT[[i]]))!=length(unique(colnames(TT[[i]]))))
message()
})
lapply(seq_along(TT),function(i){
if(length(colnames(TT[[i]]))!=length(unique(colnames(TT[[i]]))))
message(i)
})
lapply(seq_along(TT),function(i){
browser()
if(length(colnames(TT[[i]]))!=length(unique(colnames(TT[[i]]))))
message(i)
})
length(colnames(TT[[i]]))!=length(unique(colnames(TT[[i]])))
message(i)
length(colnames(TT[[i]]))
length(unique(colnames(TT[[i]])))
colnames(TT[[i]])
unique(colnames(TT[[i]])))
unique(colnames(TT[[i]]))
TT[[i]]
View(TT[[i]])
i
dim(final_df)
View(final_df)
length(unique(colnames(final_df)))
sort(colnames(final_df))
xlsx_file <- "C:/Users/19177/Desktop/H3N2.xlsx"
sheet_names <- excel_sheets(xlsx_file)
# 从xlsx读取所有工作簿
table_list <-
lapply(sheet_names,function(x){
read_excel(xlsx_file, sheet = x)
})
